name: plan-apply
# runs a plan or apply -auto-approve in a target dir

on:
  push:
    inputs:
      working_dir:
        description: 'directory where to run the tf plan'   
        required: true
        type: string
      backend_config:
        description: 'target backend config to use for the terraform init relative to the working dir'
        required: true
        type: string
      config_file:
        description: 'which config file to use relative to the working dir'   
        required: true
        type: string
      auto_approve:
        description: 'if true the plan is skipped and apply is run with -auto-approve switch'   
        required: false
        default: false
        type: boolean

jobs:
  plan-apply:
    name: "${{ inputs.working_dir }}"
    runs-on: evergreen-runner
    # environment: 'dev'
    env:
      # TF_LOG: DEBUG
      ARM_CLIENT_ID: ${{secrets.TF_ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.TF_ARM_CLIENT_SECRET}}
      ARM_TENANT_ID: ${{secrets.TF_ARM_TENANT_ID}}
      ARM_SUBSCRIPTION_ID: ${{secrets.TF_ARM_SUBSCRIPTION_ID}}
      ARM_DMZ_SUBSCRIPTION_ID: ${{secrets.TF_ARM_DMZ_SUBSCRIPTION_ID}}
      TF_VAR_vault_approle_role_id: ${{secrets.TF_VAR_VAULT_CST1_APPROLE_ROLE_ID}}
      TF_VAR_vault_approle_secret_id: ${{secrets.TF_VAR_VAULT_CST1_APPROLE_SECRET_ID}}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Node
      uses: actions/setup-node@v3
      with:
        node-version: 14

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.5

    - name: Terraform Init
      id: init
      working-directory: "${{ inputs.working_dir }}"
      run: terraform init -backend-config "${{ inputs.backend_config }}"

    - name: Terraform Validate
      id: validate
      working-directory: "${{ inputs.working_dir }}"
      run: terraform validate

    - name: Terraform Plan
      id: plan
      if: ${{ inputs.auto_approve == false }}
      working-directory: "${{ inputs.working_dir }}"
      run: terraform plan -var="config_file=${{ inputs.config_file }}"

    - name: Terraform Apply
      id: apply
      if: ${{ inputs.auto_approve == true }}
      working-directory: "${{ inputs.working_dir }}"
      run: terraform apply -var="config_file=${{ inputs.config_file }}" -auto-approve
      
    - name: Action Terraform Report
      uses: guledm12/action-terraform-report@v1.3.4
      with:
           terraform-text: ${{ github.workspace }}/.github/workflows/terraform.txt
           terraform-json: ${{ github.workspace }}/.github/workflows/terraform.json
           remove-stale-reports: true
           show-diff: true